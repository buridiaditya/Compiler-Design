Symbol Table
0 : NAME : main        TYPE : FUNCTION        INITIAL VALUE :         SIZE : 0        OFFSET : 8
------------------Nested Table-----------------------
0 : NAME : retVal        TYPE : VOID        INITIAL VALUE :         SIZE : 0        OFFSET : 8
1 : NAME : a        TYPE : INT        INITIAL VALUE : 9        SIZE : 8        OFFSET : 8
2 : NAME : b        TYPE : INT        INITIAL VALUE : 18        SIZE : 8        OFFSET : 16
3 : NAME : c        TYPE : DOUBLE        INITIAL VALUE : 7.270000        SIZE : 8        OFFSET : 24
4 : NAME : d        TYPE : DOUBLE        INITIAL VALUE : 0.000000        SIZE : 8        OFFSET : 32
5 : NAME : e        TYPE : CHAR        INITIAL VALUE : 0        SIZE : 8        OFFSET : 40
6 : NAME : f        TYPE : CHAR        INITIAL VALUE : 39        SIZE : 8        OFFSET : 48
7 : NAME : A        TYPE : MATRIX        INITIAL VALUE :         SIZE : 72        OFFSET : 56
8 : NAME : temp0        TYPE : INT        INITIAL VALUE : 38670432        SIZE : 8        OFFSET : 128
9 : NAME : temp1        TYPE : INT        INITIAL VALUE : 1        SIZE : 8        OFFSET : 136
10 : NAME : temp2        TYPE : INT        INITIAL VALUE : 1        SIZE : 8        OFFSET : 144
-----------------------------------------------------
===================================================
Quad Array
0 : OP_FUNC_START main
1 : d = c
2 : e = a
3 : a = -a
4 : a = a
5 : a = a - a
6 : a = a + a
7 : a = a * a
8 : a = a / a
9 : a = a %% a
10 : if a > b then goto 12
11 : goto 14
12 : b = b - temp1
13 : goto 15
14 : b = b + temp2
15 : a = a >> b
16 : a = a | b
17 : OP_FUNC_END main
-----------------------------------------------TARGET CODE-----------------------------------------------
	.text
	.globl	main
	.type	main, @function
main:
.LFB0:
	pushq	%%rbp
	movq	%%rsp, %%rbp
	subq	$144, %%rsp
	movq	-24(%%rbp), %%rax
	movq	%%rax, -32(%%rbp)
	movq	-32(%%rbp), %%rax
	movq	-24(%%rbp), %%rdx
	movq	%%rdx, (%%rax)
	movq	-8(%%rbp), %%rax
	movq	%%rax, -40(%%rbp)
	movq	-40(%%rbp), %%rax
	movq	-8(%%rbp), %%rdx
	movq	%%rdx, (%%rax)
	movq	-8(%%rbp), %%rax
	negq	rax
	movq	%%rax, -8(%%rbp)
	movq	-8(%%rbp), %%rax
	movq	%%rax, -8(%%rbp)
	movq	-8(%%rbp), %%rax
	movq	-8(%%rbp), %%rdx
	movq	%%rdx, (%%rax)
	movq	-8(%%rbp), %%rax
	movq	-8(%%rbp), %%rdx
	subq	rdx, rax
	movq	rax, -8(%%rbp)
	movq	-8(%%rbp), %%rax
	movq	-8(%%rbp), %%rdx
	addq	%%rdx, %%rax
	movq	%%rax, -8(%%rbp)
	movq	-8(%%rbp), %%rax
	movq	-8(%%rbp), %%rdx
	imulq	rdx, rax
	movq	%%rax, -8(%%rbp)
	movq	-8(%%rbp), %%rax
	movq	-8(%%rbp), %%rcx
	cqto
	idivq	rcx
	movq	%%rax, -8(%%rbp)
	movq	-8(%%rbp), %%rax
	movq	-8(%%rbp), %%rcx
	cqto
	idivq	rcx
	movq	%%rdx, -8(%%rbp)
	movq	-8(%%rbp), %%rax
	cmpq	%%rax, -16(%%rbp)
	jg	.L0
	jmp	.L1
.L0:
	movq	-16(%%rbp), %%rax
	movq	-72(%%rbp), %%rdx
	subq	rdx, rax
	movq	rax, -16(%%rbp)
	jmp	.L2
.L1:
	movq	-16(%%rbp), %%rax
	movq	-80(%%rbp), %%rdx
	addq	%%rdx, %%rax
	movq	%%rax, -16(%%rbp)
.L2:
	movq	-8(%%rbp), %%rax
	movq	-16(%%rbp), %%rdx
	shrq	rdx, rax
	movq	rax, -8(%%rbp)
	movq	-8(%%rbp), %%rax
	movq	-16(%%rbp), %%rdx
	orq	%%rdx, %%rax
	movq	%%rax, -8(%%rbp)
.LFE0:
	.size	main, .-main
