Symbol Table
0 : NAME : add        TYPE : FUNCTION        INITIAL VALUE :         SIZE : 0        OFFSET : 8
------------------Nested Table-----------------------
0 : NAME : a        TYPE : INT        INITIAL VALUE : 0        SIZE : 8        OFFSET : 8
1 : NAME : b        TYPE : INT        INITIAL VALUE : 0        SIZE : 8        OFFSET : 16
2 : NAME : retVal        TYPE : INT        INITIAL VALUE : 0        SIZE : 8        OFFSET : 24
3 : NAME : temp0        TYPE : INT        INITIAL VALUE : 0        SIZE : 8        OFFSET : 32
-----------------------------------------------------
1 : NAME : main        TYPE : FUNCTION        INITIAL VALUE :         SIZE : 0        OFFSET : 8
------------------Nested Table-----------------------
0 : NAME : retVal        TYPE : INT        INITIAL VALUE : 0        SIZE : 8        OFFSET : 8
1 : NAME : a        TYPE : INT        INITIAL VALUE : 9        SIZE : 8        OFFSET : 16
2 : NAME : b        TYPE : INT        INITIAL VALUE : 18        SIZE : 8        OFFSET : 24
3 : NAME : c        TYPE : INT        INITIAL VALUE : 0        SIZE : 8        OFFSET : 32
4 : NAME : temp0        TYPE : INT        INITIAL VALUE : 20        SIZE : 8        OFFSET : 40
5 : NAME : temp1        TYPE : INT        INITIAL VALUE : 0        SIZE : 8        OFFSET : 48
6 : NAME : temp2        TYPE : INT        INITIAL VALUE : 2        SIZE : 8        OFFSET : 56
7 : NAME : temp3        TYPE : INT        INITIAL VALUE : 0        SIZE : 8        OFFSET : 64
8 : NAME : temp4        TYPE : INT        INITIAL VALUE : 20        SIZE : 8        OFFSET : 72
9 : NAME : temp5        TYPE : INT        INITIAL VALUE : 35828336        SIZE : 8        OFFSET : 80
10 : NAME : temp6        TYPE : INT        INITIAL VALUE : 2        SIZE : 8        OFFSET : 88
11 : NAME : temp7        TYPE : INT        INITIAL VALUE : 0        SIZE : 8        OFFSET : 96
12 : NAME : temp8        TYPE : INT        INITIAL VALUE : 0        SIZE : 8        OFFSET : 104
-----------------------------------------------------
===================================================
Quad Array
0 : OP_FUNC_START add
1 : temp0 = a + b
2 : return temp0
3 : OP_FUNC_END add
4 : OP_FUNC_START main
5 : param a
6 : param b
7 : c = call add , 2
8 : if c < temp0 then goto 10
9 : goto 12
10 : temp3 = c * temp2
11 : c = temp3
12 : if c >= temp4 then goto 14
13 : goto 16
14 : temp7 = c + temp6
15 : c = temp7
16 : return temp8
17 : OP_FUNC_END main
-----------------------------------------------TARGET CODE-----------------------------------------------
	.text
	.globl	add
	.type	add, @function
add:
.LFB0:
	pushq	%%rbp
	movq	%%rsp, %%rbp
	subq	$32, %%rsp
	movq	32(%%rbp), %%rax
	movq	24(%%rbp), %%rdx
	addq	%%rdx, %%rax
	movq	%%rax, -8(%%rbp)
	addq	32, %%rsp
	movq	-8(%%rbp), %%rax
	popq	%%rbp
	ret
.LFE0:
	.size	add, .-add
	.globl	main
	.type	main, @function
main:
.LFB1:
	pushq	%%rbp
	movq	%%rsp, %%rbp
	subq	$104, %%rsp
	movq	-8(%%rbp), %%rax
	pushq	%%rax
	movq	-16(%%rbp), %%rax
	pushq	%%rax
	subq	8, %%rsp
	call	add
	movq	(%%rsp), -24(%%rbp)
	addq	24, %%rsp
	movq	-24(%%rbp), %%rax
	cmpq	%%rax, -32(%%rbp)
	jl	.L0
	jmp	.L1
.L0:
	movq	-24(%%rbp), %%rax
	movq	-48(%%rbp), %%rdx
	imulq	rdx, rax
	movq	%%rax, -56(%%rbp)
	movq	-56(%%rbp), %%rax
	movq	%%rax, -24(%%rbp)
	movq	-24(%%rbp), %%rax
	movq	-56(%%rbp), %%rdx
	movq	%%rdx, (%%rax)
.L1:
	movq	-24(%%rbp), %%rax
	cmpq	%%rax, -64(%%rbp)
	jge	.L2
	jmp	.L3
.L2:
	movq	-24(%%rbp), %%rax
	movq	-80(%%rbp), %%rdx
	addq	%%rdx, %%rax
	movq	%%rax, -88(%%rbp)
	movq	-88(%%rbp), %%rax
	movq	%%rax, -24(%%rbp)
	movq	-24(%%rbp), %%rax
	movq	-88(%%rbp), %%rdx
	movq	%%rdx, (%%rax)
.L3:
	addq	104, %%rsp
	movq	-96(%%rbp), %%rax
	popq	%%rbp
	ret
.LFE1:
	.size	main, .-main
